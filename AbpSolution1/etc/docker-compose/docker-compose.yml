services:
  abpsolution1-angular:
    image: abpsolution1-angular:latest
    container_name: abpsolution1-angular
    build:
      context: ../../
      dockerfile: angular/Dockerfile.local
    ports:
      - "4200:80"
    depends_on:
      - abpsolution1-api
    volumes:
      - ./dynamic-env.json://usr/share/nginx/html/dynamic-env.json
    networks:
      - abp-network

  abpsolution1-api:
    image: abpsolution1-api:latest
    container_name: abpsolution1-api
    hostname: abpsolution1-api
    build:
      context: ../../
      dockerfile: src/AbpSolution1.HttpApi.Host/Dockerfile.local
    environment:
      - ASPNETCORE_URLS=https://+:8081;http://+:8080;
      - Kestrel__Certificates__Default__Path=/app/certs/localhost.pfx
      - Kestrel__Certificates__Default__Password=0674b402-718f-4c23-80e3-d577dd9e305b
      - App__SelfUrl=https://localhost:44319
      - App__AngularUrl=http://localhost:4200
      - App_CorsOrigins=http://localhost:4200
      - App__HealthCheckUrl=http://abpsolution1-api:8080/health-status
      - AuthServer__RequireHttpsMetadata=false
      - AuthServer__Authority=http://abpsolution1-authserver:8080
      - AuthServer__MetaAddress=https://localhost:44304
      - App__MVCPublicUrl=https://localhost:44302
      - ConnectionStrings__Default=Data Source=sql-server;Initial Catalog=AbpSolution1;User Id=sa;Password=myPassw0rd;MultipleActiveResultSets=true;TrustServerCertificate=True;
      - Redis__Configuration=redis
    ports:
      - "44308:8081"
    depends_on:
      sql-server:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure    
    volumes:
      - ./certs:/app/certs
    networks:
      - abp-network
  
  abpsolution1-authserver:
    image: abpsolution1-authserver:latest
    container_name: abpsolution1-authserver
    build:
      context: ../../
      dockerfile: src/AbpSolution1.AuthServer/Dockerfile.local
    environment:
      - ASPNETCORE_URLS=https://+:8081;http://+:8080;
      - App__SelfUrl=https://localhost:44304
      - App__CorsOrigins=http://localhost:4200,https://localhost:44308
      - App__HealthCheckUrl=http://abpsolution1-authserver:8080/health-status
      - AuthServer__RequireHttpsMetadata=false
      - AuthServer__Authority=https://localhost:44304
      - Kestrel__Certificates__Default__Path=/app/certs/localhost.pfx
      - Kestrel__Certificates__Default__Password=0674b402-718f-4c23-80e3-d577dd9e305b
      - ConnectionStrings__Default=Data Source=sql-server;Initial Catalog=AbpSolution1;User Id=sa;Password=myPassw0rd;MultipleActiveResultSets=true;TrustServerCertificate=True;
      - Redis__Configuration=redis
    ports:
      - "44304:8081"
    depends_on:
      sql-server:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure
    volumes:
      - ./certs:/app/certs
    networks:
      - abp-network

  abpsolution1-web-public:
    image: abpsolution1-web-public:latest
    container_name: abpsolution1-web-public
    build:
      context: ../../
      dockerfile: src/AbpSolution1.Web.Public/Dockerfile.local
    environment:
      - ASPNETCORE_URLS=https://+:8081;http://+:8080;
      - Kestrel__Certificates__Default__Path=/app/certs/localhost.pfx
      - Kestrel__Certificates__Default__Password=0674b402-718f-4c23-80e3-d577dd9e305b
      - App__SelfUrl=https://localhost:44302
      - App__HealthCheckUrl=http://abpsolution1-web-public:8080/health-status
      - AuthServer__RequireHttpsMetadata=false
      - AuthServer__IsOnK8s=true      
      - RemoteServices__Default__BaseUrl=http://abpsolution1-api:8080
      - AuthServer__Authority=https://localhost:44304/    
      - AuthServer__MetaAddress=http://abpsolution1-authserver:8080
      - RemoteServices__AbpAccountPublic__BaseUrl=http://abpsolution1-authserver:8080
      - ConnectionStrings__Default=Data Source=sql-server;Initial Catalog=AbpSolution1;User Id=sa;Password=myPassw0rd;MultipleActiveResultSets=true;TrustServerCertificate=True;
      - Redis__Configuration=redis
    ports:
      - "44302:8081"
    depends_on:
      sql-server:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure
    volumes:
      - ./certs:/app/certs
    networks:
      - abp-network  
  db-migrator:
    image: abpsolution1-db-migrator:latest
    container_name: db-migrator
    build:
      context: ../../
      dockerfile: src/AbpSolution1.DbMigrator/Dockerfile.local
    environment:
      - OpenIddict__Applications__AbpSolution1_App__RootUrl=http://localhost:4200
      - OpenIddict__Applications__AbpSolution1_Swagger__RootUrl=https://localhost:44308
      - OpenIddict__Applications__AbpSolution1_Web_Public__RootUrl=https://localhost:44302
      - ConnectionStrings__Default=Data Source=sql-server;Initial Catalog=AbpSolution1;User Id=sa;Password=myPassw0rd;MultipleActiveResultSets=true;TrustServerCertificate=True;
      - Redis__Configuration=redis
    restart: on-failure
    depends_on:
      sql-server:
        condition: service_healthy
    networks:
      - abp-network    
  
  sql-server:
    container_name: sql-server
    image: mcr.microsoft.com/azure-sql-edge:1.0.7
    ports:
      - "1434:1433"
    environment:
      SA_PASSWORD: "myPassw0rd"
      ACCEPT_EULA: "Y"
    volumes:
      - sqldata:/var/opt/mssql
    networks:
      - abp-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S sql-server -U sa -P "myPassw0rd" -Q "SELECT 1" -C -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - abp-network  
    healthcheck:
      test: ["CMD", "redis-cli","ping"]      
volumes:
  sqldata:
    name: abpsolution1_sqldata
networks:
  abp-network:
    name: abpsolution1-network
    driver: bridge
